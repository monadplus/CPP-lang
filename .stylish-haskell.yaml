steps:
  - simple_align:
      cases: true
      top_level_patterns: true
      records: true

  - imports:
      align: global
      list_align: after_alias
      pad_module_names: true
      long_list_align: inline
      empty_list_align: inherit
      list_padding: 4
      separate_lists: true
      space_surround: false

  - language_pragmas:
      style: vertical
      align: true
      remove_redundant: true

  - tabs:
      spaces: 2

  - trailing_whitespace: {}

columns: 100

newline: native

language_extensions:
  - BangPatterns
  - ConstraintKinds
  - DataKinds
  - DefaultSignatures
  - DeriveAnyClass
  - DeriveDataTypeable
  - DeriveGeneric
  - DerivingStrategies
  - EmptyCase
  - EmptyDataDecls
  - ExplicitNamespaces
  - FlexibleContexts
  - FlexibleInstances
  - FunctionalDependencies
  - GADTs
  - GeneralizedNewtypeDeriving
  - DerivingVia
  - InstanceSigs
  - KindSignatures
  - LambdaCase
  - MultiParamTypeClasses
  - MultiWayIf
  - NamedFieldPuns
  - NoImplicitPrelude
  - OverloadedStrings
  - PolyKinds
  - QuasiQuotes
  - RankNTypes
  - RecordWildCards
  - RoleAnnotations
  - ScopedTypeVariables
  - StandaloneDeriving
  - TemplateHaskell
  - TupleSections
  - TypeApplications
  - TypeFamilies
  - TypeOperators
  - ViewPatterns
