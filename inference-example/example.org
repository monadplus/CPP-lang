Trace of type inference and unification of expression \lambda f. \lambda x. (f (f x))

#+BEGIN_SRC text
infer(\lambda f. \lambda x. f (f x)):
    a := fresh()
    <{a = b -> c, b = c, c = d}, d -> d> := infer(\lambda x. f (f x)) // f : a
        b := fresh()
        <{a = b -> c, b = c = d}, d> := infer(f (f x)) // f : a, x : b
            <{}, a> := infer(f)
            <{a = b -> c}, c> := infer(f x)
                <{}, a> = infer(f)
                <{}, b> = infer(x)
                c := fresh()
                \gamma := unify(a{}, b -> c):
                    {a = b -> c}
                <{} . {} . {a = b -> c}, c>
            d := fresh()
            {b = c, c = d} := unify(a{a = b -> c} \equiv b -> c, c -> d):
                {b = c} := unify(b, c):
                    {b = c}
                {c = d} := unify(c{b = c}, d{b = c}):
                    {c = d}
                {b = c, c = d}
            <{a = b -> c, b = c = d}, d>
        // free x : b
        <{a = b -> c, b = c, c = d}, d -> d>
    //  free f : a
    <{a = b -> c, b = c = d}, (d -> d) -> d -> d>
#+END_SRC
